# user www-data;
# user  nginx;
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
#pcre_jit on;

# error_log  /var/log/nginx/error.log notice;
# pid        /var/run/nginx.pid;
pid        /tmp/nginx.pid;


events {
  worker_connections  2048;
  multi_accept on;
  use epoll;
}

http {
	charset utf-8;

  # copies data between one FD and other from within the kernel
  # faster than read() + write()
  sendfile on;

  # send headers in one piece, it is better than sending them one by one
  tcp_nopush on;

	# don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

  keepalive_timeout 15;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # hide server info for security
  server_tokens off;

	log_not_found off;
	types_hash_max_size 2048;

  # if the request body size is more than the buffer size, then the entire (or partial)
  # request body is written into a temporary file
  client_body_buffer_size  128k;

  # maximum body size
  client_max_body_size 28M;

  # maximum number and size of buffers for large headers to read from client request
  large_client_header_buffers 4 256k;

  # cache information about FDs, frequently accessed files
  open_file_cache max=200000 inactive=20s;
  # open_file_cache off; # Disabled for issue 619
  open_file_cache_valid 60s;
  open_file_cache_min_uses 5;
  open_file_cache_errors on;

  # MIME
  include mime.types;
  default_type application/octet-stream;

  # enhancment
  # Replace loadbalancer IP(real-ip) with actual client IP.
  set_real_ip_from  0.0.0.0/0;
  real_ip_header    X-Forwarded-For;
  real_ip_recursive on;

  # Helper variable for proxying websockets.
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  # load configs
  include /etc/nginx/conf.d/*.conf;
}